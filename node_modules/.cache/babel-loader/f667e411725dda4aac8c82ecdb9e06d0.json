{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Farid\\\\Desktop\\\\DERSLER\\\\dopolnitelnoe\\\\frontend\\\\js (react)\\\\reactproj\\\\routing--assignment-problem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Farid\\\\Desktop\\\\DERSLER\\\\dopolnitelnoe\\\\frontend\\\\js (react)\\\\reactproj\\\\routing--assignment-problem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Farid\\\\Desktop\\\\DERSLER\\\\dopolnitelnoe\\\\frontend\\\\js (react)\\\\reactproj\\\\routing--assignment-problem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Farid\\\\Desktop\\\\DERSLER\\\\dopolnitelnoe\\\\frontend\\\\js (react)\\\\reactproj\\\\routing--assignment-problem\\\\src\\\\components\\\\CourseTestimonials\\\\CourseTestimonials.js\";\n\n// import React from 'react';\n// import { useState,useEffect } from 'react';\n// import axios from 'axios'\n// import './CourseTestimonials.css'\n// import Carousel from 'react-items-carousel';\n// import * as FontAwesome from \"react-icons/fa\";\n// import Testimonial from './courseTestimonial/CourseTestimonial'\n// import Spinner from '../spinner/fullpagespinner/FullPageSpinner'\n// const testimonials = (props) => {\n//   const [activeItemIndex, setActiveItemIndex] = useState(0);\n//   const [TestimonialsState, setTestimonials] = useState(props.testimonials);\n//   const [spinner, setspinner] = useState(false);\n//   let updatedTestimoniasl=props.testimonials\n//   let mySet = new Set();\n//   useEffect(() => {\n//     setspinner(true)\n//     if(props.testimonials.length>1){\n//     axios\n//       .get('https://academy-4a97f.firebaseio.com/accounts.json')\n//       .then(response =>{\n//         props.testimonials.map((testimonial)=>{\n//           mySet.add(testimonial.Login)\n//         })\n//         for(let acc in response.data){\n//           if(mySet.has(response.data[acc].Login)){\n//             updatedTestimoniasl.map(testimonial=>{\n//               if(testimonial.Login===response.data[acc].Login){\n//                 testimonial.image=response.data[acc].image[Object.keys(response.data[acc].image)[0]].file\n//               }\n//             })\n//           }\n//         }\n//       });\n//   }\n//   setspinner(false)\n// });\n// // setTestimonials(updatedTestimoniasl)\n//     let sliderZero = false\n//     if(activeItemIndex === 0) \n//       sliderZero = true\n//     let sliderMaximum = false\n//     if( activeItemIndex === TestimonialsState.length -3 )\n//       sliderMaximum = true \n//     let amountofCards=3\n//     let dimensions=useWindowDimensions()\n//     if(dimensions.width<1100){\n//         amountofCards=2\n//       }\n//     if(dimensions.width<530){\n//       amountofCards=1\n//     }\n//     return (\n//         <div>\n//             {spinner ? <Spinner/> :\n//             TestimonialsState ?\n//             <div className='Testimonials '>\n//                 <div className='Testimonials__Carousel'>\n//                     <Carousel\n//                         slidesToScroll={1}\n//                         activeItemIndex={activeItemIndex}\n//                         requestToChangeActive={setActiveItemIndex} \n//                         numberOfCards={3}\n//                         gutter={35}\n//                         //disableSwipe on touch device? \n//                         >\n//                         {\n//                         TestimonialsState.map(testi=>{\n//                           return <Testimonial key={testi.id} AccData={testi}/>\n//                         })}\n//                     </Carousel>\n//                 </div>\n//                 <div className='Slider-manupulator'>\n//                     <div>\n//                         <button disabled={sliderZero} onClick={()=>setActiveItemIndex(activeItemIndex-1)} className='Slider-manupulator__Button  Slider-manupulator__Button_Testimonials  Slider-manupulator__Button_left'>{<FontAwesome.FaLessThan className='falessThan'/>}</button>\n//                         <button disabled={sliderMaximum} onClick={()=>{setActiveItemIndex(activeItemIndex+1)}} className='Slider-manupulator__Button  Slider-manupulator__Button_Testimonials  Slider-manupulator__Button_right'>{<FontAwesome.FaGreaterThan className='falessThan'/>}</button>\n//                     </div>\n//                 </div>\n//             </div>:<p>There is no Comments</p>\n//             }\n//         </div>\n//     );\n// };\n// function getWindowDimensions() {\n//     const { innerWidth: width, innerHeight: height } = window;\n//     return {\n//       width,\n//       height\n//     };\n// }\n// function useWindowDimensions() {\n//     const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n//     useEffect(() => {\n//       function handleResize() {\n//         setWindowDimensions(getWindowDimensions());\n//       }\n//       window.addEventListener('resize', handleResize);\n//       return () => window.removeEventListener('resize', handleResize);\n//     }, []);\n//     return windowDimensions;\n// }\n// export default testimonials;\nimport React, { useState, useEffect } from \"react\";\n\nvar Planets = function Planets() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hasError = _useState2[0],\n      setErrors = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      planets = _useState4[0],\n      setPlanets = _useState4[1];\n\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"https://swapi.co/api/planets/4/\");\n\n              case 2:\n                res = _context.sent;\n                res.json().then(function (res) {\n                  return setPlanets(res);\n                }).catch(function (err) {\n                  return setErrors(err);\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, JSON.stringify(planets)), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, \"Has error: \", JSON.stringify(hasError)));\n};\n\nexport default Planets;","map":{"version":3,"sources":["C:/Users/Farid/Desktop/DERSLER/dopolnitelnoe/frontend/js (react)/reactproj/routing--assignment-problem/src/components/CourseTestimonials/CourseTestimonials.js"],"names":["React","useState","useEffect","Planets","hasError","setErrors","planets","setPlanets","fetchData","fetch","res","json","then","catch","err","JSON","stringify"],"mappings":";;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,kBACUF,QAAQ,CAAC,KAAD,CADlB;AAAA;AAAA,MACbG,QADa;AAAA,MACHC,SADG;;AAAA,mBAEUJ,QAAQ,CAAC,EAAD,CAFlB;AAAA;AAAA,MAEbK,OAFa;AAAA,MAEJC,UAFI;;AAIpBL,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCM,SADD;AAAA;AAAA;;AAAA;AAAA,4EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACoBC,KAAK,CAAC,iCAAD,CADzB;;AAAA;AACQC,gBAAAA,GADR;AAEEA,gBAAAA,GAAG,CACAC,IADH,GAEGC,IAFH,CAEQ,UAAAF,GAAG;AAAA,yBAAIH,UAAU,CAACG,GAAD,CAAd;AAAA,iBAFX,EAGGG,KAHH,CAGS,UAAAC,GAAG;AAAA,yBAAIT,SAAS,CAACS,GAAD,CAAb;AAAA,iBAHZ;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AASdN,IAAAA,SAAS;AACV,GAVQ,CAAT;AAYA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOO,IAAI,CAACC,SAAL,CAAeV,OAAf,CAAP,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkBS,IAAI,CAACC,SAAL,CAAeZ,QAAf,CAAlB,CAHF,CADF;AAOD,CAvBD;;AAwBA,eAAeD,OAAf","sourcesContent":["// import React from 'react';\r\n// import { useState,useEffect } from 'react';\r\n// import axios from 'axios'\r\n\r\n// import './CourseTestimonials.css'\r\n\r\n// import Carousel from 'react-items-carousel';\r\n// import * as FontAwesome from \"react-icons/fa\";\r\n// import Testimonial from './courseTestimonial/CourseTestimonial'\r\n// import Spinner from '../spinner/fullpagespinner/FullPageSpinner'\r\n\r\n// const testimonials = (props) => {\r\n//   const [activeItemIndex, setActiveItemIndex] = useState(0);\r\n//   const [TestimonialsState, setTestimonials] = useState(props.testimonials);\r\n//   const [spinner, setspinner] = useState(false);\r\n//   let updatedTestimoniasl=props.testimonials\r\n//   let mySet = new Set();\r\n  \r\n//   useEffect(() => {\r\n//     setspinner(true)\r\n//     if(props.testimonials.length>1){\r\n//     axios\r\n//       .get('https://academy-4a97f.firebaseio.com/accounts.json')\r\n//       .then(response =>{\r\n//         props.testimonials.map((testimonial)=>{\r\n//           mySet.add(testimonial.Login)\r\n//         })\r\n\r\n//         for(let acc in response.data){\r\n//           if(mySet.has(response.data[acc].Login)){\r\n//             updatedTestimoniasl.map(testimonial=>{\r\n//               if(testimonial.Login===response.data[acc].Login){\r\n//                 testimonial.image=response.data[acc].image[Object.keys(response.data[acc].image)[0]].file\r\n//               }\r\n//             })\r\n//           }\r\n//         }\r\n//       });\r\n//   }\r\n//   setspinner(false)\r\n// });\r\n\r\n// // setTestimonials(updatedTestimoniasl)\r\n\r\n\r\n   \r\n\r\n    \r\n      \r\n//     let sliderZero = false\r\n//     if(activeItemIndex === 0) \r\n//       sliderZero = true\r\n    \r\n//     let sliderMaximum = false\r\n    \r\n//     if( activeItemIndex === TestimonialsState.length -3 )\r\n//       sliderMaximum = true \r\n\r\n//     let amountofCards=3\r\n//     let dimensions=useWindowDimensions()\r\n//     if(dimensions.width<1100){\r\n//         amountofCards=2\r\n//       }\r\n\r\n//     if(dimensions.width<530){\r\n//       amountofCards=1\r\n//     }\r\n    \r\n//     return (\r\n    \r\n//         <div>\r\n//             {spinner ? <Spinner/> :\r\n            \r\n//             TestimonialsState ?\r\n//             <div className='Testimonials '>\r\n\r\n//                 <div className='Testimonials__Carousel'>\r\n//                     <Carousel\r\n//                         slidesToScroll={1}\r\n//                         activeItemIndex={activeItemIndex}\r\n//                         requestToChangeActive={setActiveItemIndex} \r\n//                         numberOfCards={3}\r\n//                         gutter={35}\r\n//                         //disableSwipe on touch device? \r\n//                         >\r\n//                         {\r\n//                         TestimonialsState.map(testi=>{\r\n//                           return <Testimonial key={testi.id} AccData={testi}/>\r\n//                         })}\r\n//                     </Carousel>\r\n//                 </div>\r\n              \r\n//                 <div className='Slider-manupulator'>\r\n//                     <div>\r\n//                         <button disabled={sliderZero} onClick={()=>setActiveItemIndex(activeItemIndex-1)} className='Slider-manupulator__Button  Slider-manupulator__Button_Testimonials  Slider-manupulator__Button_left'>{<FontAwesome.FaLessThan className='falessThan'/>}</button>\r\n//                         <button disabled={sliderMaximum} onClick={()=>{setActiveItemIndex(activeItemIndex+1)}} className='Slider-manupulator__Button  Slider-manupulator__Button_Testimonials  Slider-manupulator__Button_right'>{<FontAwesome.FaGreaterThan className='falessThan'/>}</button>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>:<p>There is no Comments</p>\r\n//             }\r\n//         </div>\r\n//     );\r\n// };\r\n// function getWindowDimensions() {\r\n//     const { innerWidth: width, innerHeight: height } = window;\r\n//     return {\r\n//       width,\r\n//       height\r\n//     };\r\n// }\r\n  \r\n\r\n  \r\n// function useWindowDimensions() {\r\n//     const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n  \r\n//     useEffect(() => {\r\n//       function handleResize() {\r\n//         setWindowDimensions(getWindowDimensions());\r\n//       }\r\n  \r\n//       window.addEventListener('resize', handleResize);\r\n//       return () => window.removeEventListener('resize', handleResize);\r\n//     }, []);\r\n  \r\n//     return windowDimensions;\r\n// }\r\n  \r\n  \r\n    \r\n// export default testimonials;\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Planets = () => {\r\n  const [hasError, setErrors] = useState(false);\r\n  const [planets, setPlanets] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const res = await fetch(\"https://swapi.co/api/planets/4/\");\r\n      res\r\n        .json()\r\n        .then(res => setPlanets(res))\r\n        .catch(err => setErrors(err));\r\n    }\r\n\r\n    fetchData();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <span>{JSON.stringify(planets)}</span>\r\n      <hr />\r\n      <span>Has error: {JSON.stringify(hasError)}</span>\r\n    </div>\r\n  );\r\n};\r\nexport default Planets;"]},"metadata":{},"sourceType":"module"}