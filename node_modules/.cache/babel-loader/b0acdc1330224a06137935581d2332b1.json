{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Farid\\\\Desktop\\\\DERSLER\\\\dopolnitelnoe\\\\frontend\\\\js (react)\\\\reactproj\\\\routing--assignment-problem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Farid\\\\Desktop\\\\DERSLER\\\\dopolnitelnoe\\\\frontend\\\\js (react)\\\\reactproj\\\\routing--assignment-problem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Farid\\\\Desktop\\\\DERSLER\\\\dopolnitelnoe\\\\frontend\\\\js (react)\\\\reactproj\\\\routing--assignment-problem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Farid\\\\Desktop\\\\DERSLER\\\\dopolnitelnoe\\\\frontend\\\\js (react)\\\\reactproj\\\\routing--assignment-problem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Farid\\\\Desktop\\\\DERSLER\\\\dopolnitelnoe\\\\frontend\\\\js (react)\\\\reactproj\\\\routing--assignment-problem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Farid\\\\Desktop\\\\DERSLER\\\\dopolnitelnoe\\\\frontend\\\\js (react)\\\\reactproj\\\\routing--assignment-problem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Farid\\\\Desktop\\\\DERSLER\\\\dopolnitelnoe\\\\frontend\\\\js (react)\\\\reactproj\\\\routing--assignment-problem\\\\src\\\\containers\\\\registration\\\\registration.js\";\nimport React, { Component } from 'react';\nimport './registration.css';\nimport Register from '../../components/register/register';\nimport Modal from './../../components/UI/MODAL/modal';\nimport Spinner from '../../components/spinner/spinner';\nimport axios from 'axios';\nimport RegisterComplete from '../../components/register/registerComplete/registerComplete';\n\nvar registration = /*#__PURE__*/function (_Component) {\n  _inherits(registration, _Component);\n\n  function registration() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, registration);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(registration)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      spinner: false,\n      registerData: {\n        Name: {\n          value: '',\n          validation: {\n            requeried: true,\n            minLength: 3,\n            maxLength: 10\n          },\n          valid: false,\n          touched: false\n        },\n        Surname: {\n          value: '',\n          validation: {\n            requeried: true,\n            minLength: 3,\n            maxLength: 10\n          },\n          valid: false,\n          touched: false\n        },\n        Login: {\n          value: '',\n          validation: {\n            requeried: true,\n            minLength: 3,\n            maxLength: 10\n          },\n          valid: false,\n          touched: false\n        },\n        Password: {\n          value: '',\n          validation: {\n            requeried: true,\n            minLength: 3,\n            maxLength: 10\n          },\n          valid: false,\n          touched: false\n        },\n        City: {\n          value: '',\n          validation: {\n            requeried: true,\n            minLength: 3,\n            maxLength: 10\n          },\n          valid: false,\n          touched: false\n        },\n        Subject: {\n          value: 'Math',\n          validation: {},\n          valid: true,\n          touched: true\n        },\n        Gender: {\n          value: 'Male',\n          validation: {},\n          valid: true,\n          touched: true\n        },\n        Activity: {\n          value: 'Student',\n          validation: {},\n          valid: true,\n          touched: true\n        }\n      },\n      image: '',\n      FormValidity: false,\n      BusyLogin: false\n    };\n\n    _this.capitalize = function (str) {\n      if (typeof str !== 'string') return '';\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    };\n\n    _this.makeRegistration = function () {\n      _this.setState({\n        spinner: true,\n        BusyLogin: false\n      });\n\n      axios.get('https://academy-4a97f.firebaseio.com/accounts.json').then(function (response) {\n        console.log(response.data);\n\n        for (var accounts in response.data) {\n          if (_this.state.registerData.Login.value === response.data[accounts].Login) {\n            _this.setState({\n              BusyLogin: true\n            });\n\n            break;\n          }\n        }\n\n        if (!_this.state.BusyLogin) {\n          _this.props.registrSucces(_this.state.FormValidity);\n\n          var account = {\n            Name: _this.capitalize(_this.state.registerData.Name.value),\n            Surname: _this.capitalize(_this.state.registerData.Surname.value),\n            Login: _this.state.registerData.Login.value,\n            Password: _this.state.registerData.Password.value,\n            City: _this.state.registerData.City.value,\n            Subject: _this.state.registerData.Subject.value,\n            Gender: _this.state.registerData.Gender.value,\n            Activity: _this.state.registerData.Activity.value,\n            image: _this.state.image\n          };\n\n          _this.cleanState();\n\n          console.log(_this.state);\n          axios.post('https://academy-4a97f.firebaseio.com/accounts.json', account).then(function (response) {\n            _this.setState({\n              spinner: false,\n              FormValidity: false\n            });\n          }).catch(function () {\n            _this.setState({\n              spinner: false\n            });\n\n            console.log('error');\n          });\n        } else {\n          _this.setState({\n            spinner: false,\n            FormValidity: false\n          });\n\n          _this.cleanState();\n        }\n      });\n    };\n\n    _this.changeHandler = function (event) {\n      var updated = _objectSpread({}, _this.state.registerData);\n\n      var updatedFormElement = _objectSpread({}, updated[event.target.id]);\n\n      console.log(_this.state.registerData.Subject.value);\n      updatedFormElement.value = event.target.value;\n      updatedFormElement.valid = _this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\n      updatedFormElement.touched = true;\n      updated[event.target.id].value = updatedFormElement.value;\n      updated[event.target.id].valid = updatedFormElement.valid;\n      var formIsValid = true;\n\n      for (var inputId in updated) {\n        formIsValid = updated[inputId].valid && formIsValid; // console.log('bu hammis',updated[inputId].valid)\n      }\n\n      _this.setState({\n        registerData: updated,\n        FormValidity: formIsValid\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(registration, [{\n    key: \"cleanState\",\n    value: function cleanState() {\n      for (var element in this.state.registerData) {\n        var _updated = _objectSpread({}, this.state.registerData);\n\n        if (element !== 'Gender' && element !== 'Subject' && element !== 'Activity') {\n          _updated[element].valid = false;\n          _updated[element].value = '';\n        }\n      }\n\n      this.setState({\n        registerData: updated\n      });\n    }\n  }, {\n    key: \"checkValidity\",\n    value: function checkValidity(value, rules) {\n      var isValid = true;\n\n      if (rules.requeried) {\n        isValid = value.trim() !== '' && isValid;\n      }\n\n      if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n      }\n\n      if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n      }\n\n      return isValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Registration__Modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Modal, {\n        modalClosed: this.props.closeRegister,\n        show: this.props.register,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }\n      }, this.props.registrationComplete ? /*#__PURE__*/React.createElement(RegisterComplete, {\n        comRegtoLogin: this.props.compRegtoLogin,\n        closeCompletedRegister: this.props.closeCompletedRegister,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 126\n        }\n      }) : this.state.spinner ? /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 270\n        }\n      }) : /*#__PURE__*/React.createElement(Register, {\n        BusyLogin: this.state.BusyLogin,\n        disabled: !this.state.FormValidity,\n        makeRegistration: this.makeRegistration,\n        cancellRegistration: this.props.closeRegister,\n        inputval: function inputval(event) {\n          return _this2.changeHandler(event);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 283\n        }\n      })));\n    }\n  }]);\n\n  return registration;\n}(Component);\n\nexport default registration;","map":{"version":3,"sources":["C:/Users/Farid/Desktop/DERSLER/dopolnitelnoe/frontend/js (react)/reactproj/routing--assignment-problem/src/containers/registration/registration.js"],"names":["React","Component","Register","Modal","Spinner","axios","RegisterComplete","registration","state","spinner","registerData","Name","value","validation","requeried","minLength","maxLength","valid","touched","Surname","Login","Password","City","Subject","Gender","Activity","image","FormValidity","BusyLogin","capitalize","str","charAt","toUpperCase","slice","makeRegistration","setState","get","then","response","console","log","data","accounts","props","registrSucces","account","cleanState","post","catch","changeHandler","event","updated","updatedFormElement","target","id","checkValidity","formIsValid","inputId","element","rules","isValid","trim","length","closeRegister","register","registrationComplete","compRegtoLogin","closeCompletedRegister"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './registration.css'\r\nimport Register from '../../components/register/register'\r\nimport Modal from './../../components/UI/MODAL/modal'\r\nimport Spinner from '../../components/spinner/spinner'\r\nimport axios from 'axios'\r\nimport RegisterComplete from '../../components/register/registerComplete/registerComplete'\r\n\r\nclass registration extends Component {\r\n    state={\r\n        spinner:false,\r\n        registerData:{\r\n            Name:{\r\n                value:'',\r\n                validation:{\r\n                    requeried:true,\r\n                    minLength:3,\r\n                    maxLength:10\r\n                    },\r\n                valid:false,\r\n                touched:false,\r\n            },\r\n            Surname:{\r\n                value:'',\r\n                validation:{\r\n                    requeried:true,\r\n                    minLength:3,\r\n                    maxLength:10\r\n                    },\r\n                valid:false,\r\n                touched:false,\r\n            },\r\n            Login:{\r\n                value:'',\r\n                validation:{\r\n                    requeried:true,\r\n                    minLength:3,\r\n                    maxLength:10\r\n                    },\r\n                valid:false,\r\n                touched:false,\r\n            },\r\n            Password:{\r\n                value:'',\r\n                validation:{\r\n                    requeried:true,\r\n                    minLength:3,\r\n                    maxLength:10\r\n                    },\r\n                valid:false,\r\n                touched:false,\r\n            },\r\n            City:{\r\n                value:'',\r\n                validation:{\r\n                    requeried:true,\r\n                    minLength:3,\r\n                    maxLength:10\r\n                    },\r\n                valid:false,\r\n                touched:false,\r\n            },\r\n            Subject:{\r\n                value:'Math',\r\n                validation:{},\r\n                valid:true,\r\n                touched:true,\r\n            },\r\n            Gender:{\r\n                value:'Male',\r\n                validation:{},\r\n                valid:true,\r\n                touched:true,\r\n            },\r\n            Activity:{\r\n                value:'Student',\r\n                validation:{},\r\n                valid:true,\r\n                touched:true,\r\n            }\r\n        },\r\n        image:'',\r\n        FormValidity:false,\r\n        BusyLogin:false\r\n    }\r\n    capitalize = (str) => {\r\n        if (typeof str !== 'string') return ''\r\n        return str.charAt(0).toUpperCase() + str.slice(1)\r\n    }\r\n    makeRegistration=()=>{\r\n        this.setState({spinner:true,BusyLogin:false})\r\n        axios.get('https://academy-4a97f.firebaseio.com/accounts.json').then((response)=>{\r\n            console.log(response.data)\r\n            for(let accounts in response.data){\r\n                if(this.state.registerData.Login.value === response.data[accounts].Login){\r\n                    this.setState({BusyLogin:true})\r\n                    break\r\n                }\r\n            }\r\n            if(!this.state.BusyLogin){    \r\n                    this.props.registrSucces(this.state.FormValidity)\r\n                    const account={\r\n                        Name:this.capitalize(this.state.registerData.Name.value),\r\n                        Surname:this.capitalize(this.state.registerData.Surname.value),\r\n                        Login:this.state.registerData.Login.value,\r\n                        Password:this.state.registerData.Password.value,\r\n                        City:this.state.registerData.City.value,\r\n                        Subject:this.state.registerData.Subject.value,\r\n                        Gender:this.state.registerData.Gender.value,\r\n                        Activity:this.state.registerData.Activity.value,\r\n                        image:this.state.image\r\n                    }\r\n                    this.cleanState()\r\n                    console.log(this.state)\r\n                    axios.post('https://academy-4a97f.firebaseio.com/accounts.json',account).then(response=> {\r\n                        this.setState({spinner:false,FormValidity:false})\r\n                        })\r\n                        .catch(()=>{\r\n                            this.setState({spinner:false})\r\n                            console.log('error')}\r\n                        )\r\n            }\r\n            else{\r\n                this.setState({spinner:false,FormValidity:false})\r\n                this.cleanState()\r\n            }\r\n        })\r\n    }\r\n    cleanState(){\r\n        for (let element in this.state.registerData){\r\n            const updated = {\r\n                ...this.state.registerData\r\n            }                                           \r\n            if(element !== 'Gender' && element !=='Subject' && element !=='Activity' ){\r\n                updated[element].valid = false\r\n                updated[element].value = ''\r\n            }\r\n        }\r\n        this.setState({registerData:updated})\r\n    }\r\n    \r\n\r\n    checkValidity(value,rules){\r\n        let isValid=true;\r\n        if(rules.requeried){\r\n            isValid=value.trim() !=='' && isValid\r\n        }\r\n        if(rules.minLength){\r\n            isValid=value.length>=rules.minLength && isValid\r\n        }\r\n        if(rules.maxLength){\r\n            isValid=value.length <= rules.maxLength && isValid\r\n        }\r\n        return isValid\r\n    }\r\n\r\n     changeHandler=(event)=>{ \r\n        const updated={\r\n            ...this.state.registerData\r\n        }\r\n        let updatedFormElement={\r\n            ...updated[event.target.id]\r\n        }\r\n        console.log(this.state.registerData.Subject.value)\r\n        \r\n        updatedFormElement.value=event.target.value\r\n        updatedFormElement.valid=this.checkValidity(updatedFormElement.value,updatedFormElement.validation)\r\n        updatedFormElement.touched=true\r\n        updated[event.target.id].value=updatedFormElement.value\r\n        updated[event.target.id].valid=updatedFormElement.valid\r\n        let formIsValid=true\r\n        for(let inputId in updated){\r\n            formIsValid = updated[inputId].valid && formIsValid\r\n            // console.log('bu hammis',updated[inputId].valid)\r\n        }\r\n        \r\n        this.setState({registerData:updated,FormValidity:formIsValid})  \r\n    }\r\n    render() {\r\n        return (\r\n            <div className='Registration__Modal'>\r\n                <Modal modalClosed={this.props.closeRegister} show={this.props.register} >{this.props.registrationComplete ? <RegisterComplete comRegtoLogin={this.props.compRegtoLogin} closeCompletedRegister={this.props.closeCompletedRegister}/> : this.state.spinner ? <Spinner/> : <Register BusyLogin={this.state.BusyLogin} disabled={!this.state.FormValidity} makeRegistration={this.makeRegistration} cancellRegistration={this.props.closeRegister} inputval={(event)=>this.changeHandler(event)}/>}</Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default registration;"]},"metadata":{},"sourceType":"module"}