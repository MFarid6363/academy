{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Farid\\\\Desktop\\\\DERSLER\\\\dopolnitelnoe\\\\frontend\\\\js (react)\\\\reactproj\\\\routing--assignment-problem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Farid\\\\Desktop\\\\DERSLER\\\\dopolnitelnoe\\\\frontend\\\\js (react)\\\\reactproj\\\\routing--assignment-problem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Farid\\\\Desktop\\\\DERSLER\\\\dopolnitelnoe\\\\frontend\\\\js (react)\\\\reactproj\\\\routing--assignment-problem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Farid\\\\Desktop\\\\DERSLER\\\\dopolnitelnoe\\\\frontend\\\\js (react)\\\\reactproj\\\\routing--assignment-problem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Farid\\\\Desktop\\\\DERSLER\\\\dopolnitelnoe\\\\frontend\\\\js (react)\\\\reactproj\\\\routing--assignment-problem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Farid\\\\Desktop\\\\DERSLER\\\\dopolnitelnoe\\\\frontend\\\\js (react)\\\\reactproj\\\\routing--assignment-problem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Farid\\\\Desktop\\\\DERSLER\\\\dopolnitelnoe\\\\frontend\\\\js (react)\\\\reactproj\\\\routing--assignment-problem\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Farid\\\\Desktop\\\\DERSLER\\\\dopolnitelnoe\\\\frontend\\\\js (react)\\\\reactproj\\\\routing--assignment-problem\\\\src\\\\containers\\\\LoginValidation\\\\LoginValidation.js\";\nimport React, { Component } from 'react';\nimport Login from '../../components/Login/Login';\nimport Modal from '../../components/UI/MODAL/modal';\nimport axios from 'axios';\nimport Spinner from '../../components/spinner/spinner';\n\nvar LoginValidation = /*#__PURE__*/function (_Component) {\n  _inherits(LoginValidation, _Component);\n\n  function LoginValidation() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginValidation);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginValidation)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      spinner: false,\n      accountData: {\n        Login: {\n          value: '',\n          validation: {\n            requeried: true,\n            minLength: 3,\n            maxLength: 10\n          },\n          valid: false\n        },\n        Password: {\n          value: '',\n          validation: {\n            requeried: true,\n            minLength: 3,\n            maxLength: 10\n          },\n          valid: false\n        }\n      },\n      image: '',\n      validity: false,\n      logined: false,\n      wrongData: false\n    };\n\n    _this.getData = function (event) {\n      var updated = _objectSpread({}, _this.state.accountData);\n\n      var element = event.target;\n\n      var updatedelement = _objectSpread({}, _this.state.accountData[element.id]);\n\n      updatedelement.value = element.value;\n      updatedelement.valid = _this.checkValidity(updatedelement.value, updatedelement.validation);\n      updated[element.id].value = updatedelement.value;\n      updated[element.id].valid = updatedelement.valid;\n      var formIsValid = true;\n\n      for (var inputId in updated) {\n        formIsValid = updated[inputId].valid && formIsValid; //check if all valeus is valid\n      }\n\n      _this.setState({\n        accountData: updated,\n        validity: formIsValid\n      });\n    };\n\n    _this.logintoAcc = function (event) {\n      _this.setState({\n        spinner: true,\n        wrongData: false\n      });\n\n      axios.get('https://academy-4a97f.firebaseio.com/accounts.json').then(function (response) {\n        var correct = false;\n\n        for (var _i = 0, _Object$entries = Object.entries(response.data); _i < _Object$entries.length; _i++) {\n          var _ref3 = _Object$entries[_i];\n\n          var _ref2 = _slicedToArray(_ref3, 1);\n\n          var key = _ref2[0];\n\n          if (_this.state.accountData.Login.value === response.data[key].Login) {\n            if (_this.state.accountData.Password.value === response.data[key].Password) {\n              console.log('succes login');\n\n              _this.setState({\n                accountData: response.data[key]\n              });\n\n              correct = true;\n              break;\n            }\n          }\n        }\n\n        _this.setState({\n          logined: correct,\n          spinner: false\n        });\n\n        _this.props.loginSucces(_this.state.logined, _this.state.accountData, _this.state.image);\n\n        if (!_this.state.logined) {\n          _this.setState({\n            wrongData: true\n          });\n        }\n      }).catch(function () {\n        return _this.setState({\n          wrongData: true\n        });\n      });\n\n      _this.setState({\n        logined: false\n      });\n\n      console.log(_this.state);\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginValidation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      state = {\n        spinner: false,\n        accountData: {\n          Login: {\n            value: '',\n            validation: {\n              requeried: true,\n              minLength: 3,\n              maxLength: 10\n            },\n            valid: false\n          },\n          Password: {\n            value: '',\n            validation: {\n              requeried: true,\n              minLength: 3,\n              maxLength: 10\n            },\n            valid: false\n          }\n        },\n        image: '',\n        validity: false,\n        logined: false,\n        wrongData: false\n      };\n    }\n  }, {\n    key: \"checkValidity\",\n    value: function checkValidity(value, rules) {\n      var isValid = true;\n\n      if (rules.requeried) {\n        isValid = value.trim() !== '' && isValid;\n      }\n\n      if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n      }\n\n      if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n      }\n\n      return isValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(Modal, {\n        modalClosed: this.props.closeLogin,\n        show: this.props.openLogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }, this.state.spinner ? /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 104\n        }\n      }) : /*#__PURE__*/React.createElement(Login, {\n        wrongPassOrLogin: this.state.wrongData,\n        disabled: !this.state.validity,\n        accData: function accData(event) {\n          return _this2.getData(event);\n        },\n        login: this.logintoAcc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 117\n        }\n      }), \" \");\n    }\n  }]);\n\n  return LoginValidation;\n}(Component);\n\nexport default LoginValidation;","map":{"version":3,"sources":["C:/Users/Farid/Desktop/DERSLER/dopolnitelnoe/frontend/js (react)/reactproj/routing--assignment-problem/src/containers/LoginValidation/LoginValidation.js"],"names":["React","Component","Login","Modal","axios","Spinner","LoginValidation","state","spinner","accountData","value","validation","requeried","minLength","maxLength","valid","Password","image","validity","logined","wrongData","getData","event","updated","element","target","updatedelement","id","checkValidity","formIsValid","inputId","setState","logintoAcc","get","then","response","correct","Object","entries","data","key","console","log","props","loginSucces","catch","rules","isValid","trim","length","closeLogin","openLogin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Login from '../../components/Login/Login'\r\nimport Modal from '../../components/UI/MODAL/modal'\r\nimport axios from 'axios'\r\nimport Spinner from '../../components/spinner/spinner';\r\n\r\nclass LoginValidation extends Component {\r\n    state={\r\n        spinner:false,\r\n        accountData:{\r\n            Login:{\r\n                value:'',\r\n                validation:{\r\n                    requeried:true,\r\n                    minLength:3,\r\n                    maxLength:10\r\n                    },\r\n                valid:false,\r\n            },  \r\n            Password:{\r\n                value:'',\r\n                validation:{\r\n                    requeried:true,\r\n                    minLength:3,\r\n                    maxLength:10\r\n                    },\r\n                valid:false,\r\n            }\r\n        },\r\n        image:'',\r\n        validity:false,\r\n        logined:false,\r\n        wrongData:false\r\n    }\r\n    componentDidMount(){\r\n        state={\r\n            spinner:false,\r\n            accountData:{\r\n                Login:{\r\n                    value:'',\r\n                    validation:{\r\n                        requeried:true,\r\n                        minLength:3,\r\n                        maxLength:10\r\n                        },\r\n                    valid:false,\r\n                },  \r\n                Password:{\r\n                    value:'',\r\n                    validation:{\r\n                        requeried:true,\r\n                        minLength:3,\r\n                        maxLength:10\r\n                        },\r\n                    valid:false,\r\n                }\r\n            },\r\n            image:'',\r\n            validity:false,\r\n            logined:false,\r\n            wrongData:false\r\n        }\r\n    }\r\n   \r\n    checkValidity(value,rules){\r\n        let isValid=true;\r\n        if(rules.requeried){\r\n            isValid=value.trim() !=='' && isValid\r\n        }\r\n        if(rules.minLength){\r\n            isValid=value.length>=rules.minLength && isValid\r\n        }\r\n        if(rules.maxLength){\r\n            isValid=value.length <= rules.maxLength && isValid\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    getData = (event) => {\r\n       const updated = {\r\n           ...this.state.accountData\r\n       }\r\n       const element=event.target\r\n       let updatedelement = {\r\n           ...this.state.accountData[element.id]\r\n       }\r\n       updatedelement.value = element.value\r\n       updatedelement.valid = this.checkValidity(updatedelement.value,updatedelement.validation)\r\n       updated[element.id].value=updatedelement.value\r\n       updated[element.id].valid=updatedelement.valid\r\n       let formIsValid=true\r\n       for(let inputId in updated){\r\n            formIsValid = updated[inputId].valid && formIsValid  //check if all valeus is valid\r\n       }\r\n       this.setState({accountData:updated,validity:formIsValid})\r\n    }\r\n    \r\n\r\n    logintoAcc = (event) => {\r\n        this.setState({spinner:true,wrongData:false})\r\n        axios.get('https://academy-4a97f.firebaseio.com/accounts.json').then(response => {\r\n        let correct=false\r\n        for (const [key] of Object.entries(response.data)) {\r\n            if(this.state.accountData.Login.value===response.data[key].Login){\r\n                if(this.state.accountData.Password.value===response.data[key].Password){\r\n                    console.log('succes login')\r\n                    this.setState({accountData:response.data[key]})\r\n                    correct=true\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        this.setState({logined:correct,spinner:false})\r\n        this.props.loginSucces(this.state.logined,this.state.accountData,this.state.image); \r\n        if(!this.state.logined){\r\n            this.setState({wrongData:true})\r\n        } \r\n        }).catch(()=>this.setState({wrongData:true}))\r\n        this.setState({logined:false})\r\n        console.log(this.state)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <Modal  modalClosed={this.props.closeLogin} show={this.props.openLogin} >{this.state.spinner ? <Spinner/> : <Login wrongPassOrLogin={this.state.wrongData} disabled={!this.state.validity} accData={ (event) => this.getData(event)} login={this.logintoAcc}/>} </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginValidation;"]},"metadata":{},"sourceType":"module"}